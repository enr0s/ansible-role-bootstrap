---
# tasks file for bootstrap
- name: Upgrade distribution
  apt:
    update_cache: yes
    upgrade: dist
  register: upgrade_distribution
  retries: 5
  until: upgrade_distribution is succeeded
- name: Check if a reboot is needed
  stat:
    path: /var/run/reboot-required
  register: reboot_required_file
- name: Reboot the box if kernel updated/installed
  reboot:
    msg: "Reboot initiated by Ansible for kernel updates"
    connect_timeout: 5
    pre_reboot_delay: 0
    post_reboot_delay: 30
    reboot_timeout: 600
    test_command: uptime
  when: reboot_required_file.stat.exists and run_not_in_container
- name: Wait 300 seconds for port 22 to become open and contain "OpenSSH"
  wait_for:
    delay: 10
    host: "{{ (ansible_ssh_host|default(inventory_hostname)|default(ansible_host)) }}"
    port: 22
    search_regex: OpenSSH
  connection: local
  when: run_not_in_container
- name: Generate /etc/hosts file
  template:
    src: etc/hosts.j2
    dest: /etc/hosts
    owner: root
    group: root
    mode: 0644
  when: run_not_in_container
- name: Set hostname
  hostname:
    name: "{{ hostvars[inventory_hostname].inventory_hostname }}"
  notify:
    - restart systemd-logind
- name: Install bootstrap packages
  apt:
    name: "{{ item }}"
    state: present
  loop: "{{ bootstrap_packages }}"
- name: Disable SWAP
  shell: |
    swapoff -a
  changed_when: false
- name: Disable SWAP
  replace:
    path: /etc/fstab
    regexp: '^([^#].*?\sswap\s+sw\s+.*)$'
    replace: '# \1'
- name: Set kernel parameters
  sysctl:
    name: "{{ item.name }}"
    sysctl_file: "{{ item.file | default(omit) }}"
    sysctl_set: yes
    state: present
    reload: yes
    value: "{{ item.value }}"
  loop: "{{ bootstrap_kernel_parameters }}"
